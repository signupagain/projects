/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const ColorfulBar: typeof import('./components/ProjectCard/projectDetails/ColorfulBar')['default']
  const EffectScope: typeof import('vue')['EffectScope']
  const Html2CanvasLogo: typeof import('./assets/logos/AllLogos')['Html2CanvasLogo']
  const I18nextLogo: typeof import('./assets/logos/AllLogos')['I18nextLogo']
  const ImgShop: typeof import('./components/ProjectCard/projectDetails/ImgShop')['default']
  const LodashLogo: typeof import('./assets/logos/AllLogos')['LodashLogo']
  const LoremIpsum: typeof import('lorem-ipsum')['LoremIpsum']
  const Navigation: typeof import('swiper/modules')['Navigation']
  const NetlifyLogo: typeof import('./assets/logos/AllLogos')['NetlifyLogo']
  const PiniaLogo: typeof import('./assets/logos/AllLogos')['PiniaLogo']
  const StackedCard: typeof import('./components/ProjectCard/projectDetails/StackedCard')['default']
  const ViteLogo: typeof import('./assets/logos/AllLogos')['ViteLogo']
  const VuetifyLogo: typeof import('./assets/logos/AllLogos')['VuetifyLogo']
  const assertIsDefined: typeof import('./use/utils/useAsserts')['assertIsDefined']
  const assertIsEventTarget: typeof import('./use/utils/useAsserts')['assertIsEventTarget']
  const assertIsHTMLElement: typeof import('./use/utils/useAsserts')['assertIsHTMLElement']
  const assertIsKeyof: typeof import('./use/utils/useAsserts')['assertIsKeyof']
  const assertIsMouseEvent: typeof import('./use/utils/useAsserts')['assertIsMouseEvent']
  const assertIsNode: typeof import('./use/utils/useAsserts')['assertIsNode']
  const computed: typeof import('vue')['computed']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const html2canvas: typeof import('html2canvas')['default']
  const imgs: typeof import('./components/StackedCard/imgs')['default']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const markRaw: typeof import('vue')['markRaw']
  const nanoid: typeof import('nanoid')['nanoid']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const onWatcherCleanup: typeof import('vue')['onWatcherCleanup']
  const projectDetails: typeof import('./components/ProjectCard/projectDetails/index')['default']
  const provide: typeof import('vue')['provide']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const throttle: typeof import('lodash-es')['throttle']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useEvent: typeof import('./use/utils/useEvent')['default']
  const useId: typeof import('vue')['useId']
  const useInterval: typeof import('./use/utils/useInterval')['default']
  const useModel: typeof import('vue')['useModel']
  const useRoute: typeof import('vue-router/auto')['useRoute']
  const useRouter: typeof import('vue-router/auto')['useRouter']
  const useScreenShot: typeof import('./use/utils/useScreenShot')['default']
  const useSkillsCarousell: typeof import('./components/ProjectCard/useSkillsCarousell')['default']
  const useSlots: typeof import('vue')['useSlots']
  const useTemplateRef: typeof import('vue')['useTemplateRef']
  const useTracingCursor: typeof import('./use/utils/useTracingCursor')['default']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, DirectiveBinding, ExtractDefaultPropTypes, ExtractPropTypes, ExtractPublicPropTypes, InjectionKey, PropType, Ref, MaybeRef, MaybeRefOrGetter, VNode, WritableComputedRef } from 'vue'
  import('vue')
  // @ts-ignore
  export type { SwiperContainer } from 'swiper/element'
  import('swiper/element')
  // @ts-ignore
  export type { SwiperOptions } from 'swiper/types'
  import('swiper/types')
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface GlobalComponents {}
  interface ComponentCustomProperties {
    readonly ColorfulBar: UnwrapRef<typeof import('./components/ProjectCard/projectDetails/ColorfulBar')['default']>
    readonly EffectScope: UnwrapRef<typeof import('vue')['EffectScope']>
    readonly Html2CanvasLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['Html2CanvasLogo']>
    readonly I18nextLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['I18nextLogo']>
    readonly ImgShop: UnwrapRef<typeof import('./components/ProjectCard/projectDetails/ImgShop')['default']>
    readonly LodashLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['LodashLogo']>
    readonly LoremIpsum: UnwrapRef<typeof import('lorem-ipsum')['LoremIpsum']>
    readonly Navigation: UnwrapRef<typeof import('swiper/modules')['Navigation']>
    readonly NetlifyLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['NetlifyLogo']>
    readonly PiniaLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['PiniaLogo']>
    readonly StackedCard: UnwrapRef<typeof import('./components/ProjectCard/projectDetails/StackedCard')['default']>
    readonly ViteLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['ViteLogo']>
    readonly VuetifyLogo: UnwrapRef<typeof import('./assets/logos/AllLogos')['VuetifyLogo']>
    readonly assertIsDefined: UnwrapRef<typeof import('./use/utils/useAsserts')['assertIsDefined']>
    readonly assertIsEventTarget: UnwrapRef<typeof import('./use/utils/useAsserts')['assertIsEventTarget']>
    readonly assertIsHTMLElement: UnwrapRef<typeof import('./use/utils/useAsserts')['assertIsHTMLElement']>
    readonly assertIsKeyof: UnwrapRef<typeof import('./use/utils/useAsserts')['assertIsKeyof']>
    readonly assertIsMouseEvent: UnwrapRef<typeof import('./use/utils/useAsserts')['assertIsMouseEvent']>
    readonly assertIsNode: UnwrapRef<typeof import('./use/utils/useAsserts')['assertIsNode']>
    readonly computed: UnwrapRef<typeof import('vue')['computed']>
    readonly createApp: UnwrapRef<typeof import('vue')['createApp']>
    readonly customRef: UnwrapRef<typeof import('vue')['customRef']>
    readonly defineAsyncComponent: UnwrapRef<typeof import('vue')['defineAsyncComponent']>
    readonly defineComponent: UnwrapRef<typeof import('vue')['defineComponent']>
    readonly effectScope: UnwrapRef<typeof import('vue')['effectScope']>
    readonly getCurrentInstance: UnwrapRef<typeof import('vue')['getCurrentInstance']>
    readonly getCurrentScope: UnwrapRef<typeof import('vue')['getCurrentScope']>
    readonly h: UnwrapRef<typeof import('vue')['h']>
    readonly html2canvas: UnwrapRef<typeof import('html2canvas')['default']>
    readonly imgs: UnwrapRef<typeof import('./components/StackedCard/imgs')['default']>
    readonly inject: UnwrapRef<typeof import('vue')['inject']>
    readonly isProxy: UnwrapRef<typeof import('vue')['isProxy']>
    readonly isReactive: UnwrapRef<typeof import('vue')['isReactive']>
    readonly isReadonly: UnwrapRef<typeof import('vue')['isReadonly']>
    readonly isRef: UnwrapRef<typeof import('vue')['isRef']>
    readonly markRaw: UnwrapRef<typeof import('vue')['markRaw']>
    readonly nanoid: UnwrapRef<typeof import('nanoid')['nanoid']>
    readonly nextTick: UnwrapRef<typeof import('vue')['nextTick']>
    readonly onActivated: UnwrapRef<typeof import('vue')['onActivated']>
    readonly onBeforeMount: UnwrapRef<typeof import('vue')['onBeforeMount']>
    readonly onBeforeUnmount: UnwrapRef<typeof import('vue')['onBeforeUnmount']>
    readonly onBeforeUpdate: UnwrapRef<typeof import('vue')['onBeforeUpdate']>
    readonly onDeactivated: UnwrapRef<typeof import('vue')['onDeactivated']>
    readonly onErrorCaptured: UnwrapRef<typeof import('vue')['onErrorCaptured']>
    readonly onMounted: UnwrapRef<typeof import('vue')['onMounted']>
    readonly onRenderTracked: UnwrapRef<typeof import('vue')['onRenderTracked']>
    readonly onRenderTriggered: UnwrapRef<typeof import('vue')['onRenderTriggered']>
    readonly onScopeDispose: UnwrapRef<typeof import('vue')['onScopeDispose']>
    readonly onServerPrefetch: UnwrapRef<typeof import('vue')['onServerPrefetch']>
    readonly onUnmounted: UnwrapRef<typeof import('vue')['onUnmounted']>
    readonly onUpdated: UnwrapRef<typeof import('vue')['onUpdated']>
    readonly onWatcherCleanup: UnwrapRef<typeof import('vue')['onWatcherCleanup']>
    readonly projectDetails: UnwrapRef<typeof import('./components/ProjectCard/projectDetails/index')['default']>
    readonly provide: UnwrapRef<typeof import('vue')['provide']>
    readonly reactive: UnwrapRef<typeof import('vue')['reactive']>
    readonly readonly: UnwrapRef<typeof import('vue')['readonly']>
    readonly ref: UnwrapRef<typeof import('vue')['ref']>
    readonly resolveComponent: UnwrapRef<typeof import('vue')['resolveComponent']>
    readonly shallowReactive: UnwrapRef<typeof import('vue')['shallowReactive']>
    readonly shallowReadonly: UnwrapRef<typeof import('vue')['shallowReadonly']>
    readonly shallowRef: UnwrapRef<typeof import('vue')['shallowRef']>
    readonly throttle: UnwrapRef<typeof import('lodash-es')['throttle']>
    readonly toRaw: UnwrapRef<typeof import('vue')['toRaw']>
    readonly toRef: UnwrapRef<typeof import('vue')['toRef']>
    readonly toRefs: UnwrapRef<typeof import('vue')['toRefs']>
    readonly toValue: UnwrapRef<typeof import('vue')['toValue']>
    readonly triggerRef: UnwrapRef<typeof import('vue')['triggerRef']>
    readonly unref: UnwrapRef<typeof import('vue')['unref']>
    readonly useAttrs: UnwrapRef<typeof import('vue')['useAttrs']>
    readonly useCssModule: UnwrapRef<typeof import('vue')['useCssModule']>
    readonly useCssVars: UnwrapRef<typeof import('vue')['useCssVars']>
    readonly useEvent: UnwrapRef<typeof import('./use/utils/useEvent')['default']>
    readonly useId: UnwrapRef<typeof import('vue')['useId']>
    readonly useInterval: UnwrapRef<typeof import('./use/utils/useInterval')['default']>
    readonly useModel: UnwrapRef<typeof import('vue')['useModel']>
    readonly useRoute: UnwrapRef<typeof import('vue-router/auto')['useRoute']>
    readonly useRouter: UnwrapRef<typeof import('vue-router/auto')['useRouter']>
    readonly useScreenShot: UnwrapRef<typeof import('./use/utils/useScreenShot')['default']>
    readonly useSkillsCarousell: UnwrapRef<typeof import('./components/ProjectCard/useSkillsCarousell')['default']>
    readonly useSlots: UnwrapRef<typeof import('vue')['useSlots']>
    readonly useTemplateRef: UnwrapRef<typeof import('vue')['useTemplateRef']>
    readonly useTracingCursor: UnwrapRef<typeof import('./use/utils/useTracingCursor')['default']>
    readonly watch: UnwrapRef<typeof import('vue')['watch']>
    readonly watchEffect: UnwrapRef<typeof import('vue')['watchEffect']>
    readonly watchPostEffect: UnwrapRef<typeof import('vue')['watchPostEffect']>
    readonly watchSyncEffect: UnwrapRef<typeof import('vue')['watchSyncEffect']>
  }
}
